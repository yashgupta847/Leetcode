//Solution 1

// class Solution {
//     public int triangularSum(int[] nums) {
//         if (nums.length == 1)
//             return nums[0];

//         ArrayList<Integer> list = new ArrayList<>();
//         for (int i = 0; i < nums.length; i++)
//             list.add(nums[i]);
//         while (list.size() != 1) {
//             ArrayList<Integer> demo = new ArrayList<>();
//             for (int i = 0; i < list.size() - 1; i++) {
//                 demo.add((list.get(i) + list.get(i + 1)) % 10);
//             }
//             list.clear();
//             list.addAll(demo);
//         }
//         return list.get(0);
//     }
// }



//Solution 2 
class Solution {
    public int triangularSum(int[] nums) {
        int n = nums.length;
        for (int len = n; len > 1; len--) {
            for (int i = 0; i < len - 1; i++) {
                nums[i] = (nums[i] + nums[i + 1]) % 10;
            }
        }

        return nums[0];
    }
}
